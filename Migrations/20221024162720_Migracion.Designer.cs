// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using apiServices.Models;

#nullable disable

namespace apiServices.Migrations
{
    [DbContext(typeof(siscolasgamcContext))]
    [Migration("20221024162720_Migracion")]
    partial class Migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("apiServices.Models.Agencium", b =>
                {
                    b.Property<long>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdAgencia"));

                    b.Property<int?>("Acdes")
                        .HasColumnType("integer")
                        .HasColumnName("acdes");

                    b.Property<int?>("Consulta")
                        .HasColumnType("integer")
                        .HasColumnName("consulta");

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<int?>("Mapa")
                        .HasColumnType("integer")
                        .HasColumnName("mapa");

                    b.Property<int?>("Multimedia")
                        .HasColumnType("integer")
                        .HasColumnName("multimedia");

                    b.Property<string>("NomAgencia")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_agencia");

                    b.HasKey("IdAgencia")
                        .HasName("agencia_pkey");

                    b.ToTable("agencia", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Contacto", b =>
                {
                    b.Property<long>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_contacto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdContacto"));

                    b.Property<string>("Correo")
                        .HasColumnType("text")
                        .HasColumnName("correo");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.Property<int?>("NCelular")
                        .HasColumnType("integer")
                        .HasColumnName("n_celular");

                    b.HasKey("IdContacto")
                        .HasName("contacto_pkey");

                    b.HasIndex("IdUsuario");

                    b.ToTable("contacto", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.DetalleObservacion", b =>
                {
                    b.Property<long>("IdDetalleObs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_detalle_obs");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdDetalleObs"));

                    b.Property<long?>("IdObservaciones")
                        .HasColumnType("bigint")
                        .HasColumnName("id_observaciones");

                    b.Property<long?>("IdTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    b.HasKey("IdDetalleObs")
                        .HasName("detalle_observacion_pkey");

                    b.HasIndex("IdTramite");

                    b.HasIndex(new[] { "IdObservaciones" }, "fki_id_observaciones");

                    b.ToTable("detalle_observacion", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Historial", b =>
                {
                    b.Property<long>("IdHistorial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_historial");

                    b.Property<int?>("EstadoContraseña")
                        .HasColumnType("integer")
                        .HasColumnName("estado_contraseña");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Password")
                        .HasMaxLength(64)
                        .HasColumnType("character(64)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ultimo_login");

                    b.HasKey("IdHistorial")
                        .HasName("historial_pkey");

                    b.HasIndex(new[] { "IdUsuario" }, "fki_id_usuario");

                    b.ToTable("historial", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.HistorialDerivacion", b =>
                {
                    b.Property<long>("IdDerivacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_derivacion");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdDerivacion"));

                    b.Property<long?>("IdTicket")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ticket");

                    b.Property<long?>("VentanillaDestino")
                        .HasColumnType("bigint")
                        .HasColumnName("ventanilla_destino");

                    b.Property<long?>("VentanillaOrigen")
                        .HasColumnType("bigint")
                        .HasColumnName("ventanilla_origen");

                    b.HasKey("IdDerivacion")
                        .HasName("historial_derivacion_pkey");

                    b.HasIndex(new[] { "IdTicket" }, "fki_id_ticket");

                    b.ToTable("historial_derivacion", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Multimedium", b =>
                {
                    b.Property<long>("IdMulti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_multi");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdMulti"));

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<string>("NomVideo")
                        .HasColumnType("text")
                        .HasColumnName("nom_video");

                    b.Property<string>("Ruta")
                        .HasColumnType("text")
                        .HasColumnName("ruta");

                    b.Property<string>("Tipo")
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.HasKey("IdMulti")
                        .HasName("multimedia_pkey");

                    b.HasIndex("IdAgencia");

                    b.ToTable("multimedia", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Observacione", b =>
                {
                    b.Property<long>("IdObservaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_observaciones");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdObservaciones"));

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<string>("NomObservaciones")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_observaciones");

                    b.HasKey("IdObservaciones")
                        .HasName("observaciones_pkey");

                    b.ToTable("observaciones", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.PantallaMul", b =>
                {
                    b.Property<long>("IdPantallaMul")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_pantalla_mul");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdPantallaMul"));

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<long?>("IdMulti")
                        .HasColumnType("bigint")
                        .HasColumnName("id_multi");

                    b.Property<long?>("IdTipo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tipo");

                    b.HasKey("IdPantallaMul")
                        .HasName("pantalla_mul_pkey");

                    b.HasIndex("IdAgencia");

                    b.HasIndex(new[] { "IdMulti" }, "fki_id_multi");

                    b.HasIndex(new[] { "IdTipo" }, "fki_id_pantalla");

                    b.HasIndex(new[] { "IdTipo" }, "fki_id_tipo");

                    b.ToTable("pantalla_mul", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Prioridad", b =>
                {
                    b.Property<long>("IdPrioridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_prioridad");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdPrioridad"));

                    b.Property<int?>("Rango")
                        .HasColumnType("integer")
                        .HasColumnName("rango");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdPrioridad")
                        .HasName("prioridad_pkey");

                    b.ToTable("prioridad", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Requisito", b =>
                {
                    b.Property<long>("IdRequisitos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_requisitos");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdRequisitos"));

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<string>("NomRequisitos")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("nom_requisitos");

                    b.HasKey("IdRequisitos")
                        .HasName("requisitos_pkey");

                    b.ToTable("requisitos", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.RequisitoTramite", b =>
                {
                    b.Property<long>("IdRequitram")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_requitram");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdRequitram"));

                    b.Property<long?>("IdRequisitos")
                        .HasColumnType("bigint")
                        .HasColumnName("id_requisitos");

                    b.Property<long?>("IdTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    b.HasKey("IdRequitram")
                        .HasName("requisito_tramite_pkey");

                    b.HasIndex("IdTramite");

                    b.HasIndex(new[] { "IdRequisitos" }, "fki_id_requisitos");

                    b.ToTable("requisito_tramite", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Ticket", b =>
                {
                    b.Property<long>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_ticket");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdTicket"));

                    b.Property<int?>("Derivacion")
                        .HasColumnType("integer")
                        .HasColumnName("derivacion");

                    b.Property<int?>("DuracionAtencion")
                        .HasColumnType("integer")
                        .HasColumnName("duracion_atencion");

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_hora");

                    b.Property<TimeOnly?>("HoraAtencion")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora_atencion");

                    b.Property<TimeOnly?>("HoraList")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora_list");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<long?>("IdPrioridad")
                        .HasColumnType("bigint")
                        .HasColumnName("id_prioridad");

                    b.Property<long?>("IdTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.Property<long?>("IdVentanilla")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ventanilla");

                    b.Property<int?>("NTicket")
                        .HasColumnType("integer")
                        .HasColumnName("n_ticket");

                    b.HasKey("IdTicket")
                        .HasName("ticket_pkey");

                    b.HasIndex(new[] { "IdAgencia" }, "fki_id_agencia");

                    b.HasIndex(new[] { "IdUsuario" }, "fki_id_persona");

                    b.HasIndex(new[] { "IdPrioridad" }, "fki_id_prioridad");

                    b.HasIndex(new[] { "IdTramite" }, "fki_id_tramite");

                    b.HasIndex(new[] { "IdVentanilla" }, "fki_id_ventanilla");

                    b.ToTable("ticket", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.TipoPantalla", b =>
                {
                    b.Property<long>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_tipo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdTipo"));

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<string>("NomTipo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_tipo");

                    b.HasKey("IdTipo")
                        .HasName("tipo_pantalla_pkey");

                    b.ToTable("tipo_pantalla", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.TipoPerfil", b =>
                {
                    b.Property<long>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_perfil");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdPerfil"));

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<string>("NomTipoP")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nom_tipo_p");

                    b.HasKey("IdPerfil")
                        .HasName("tipo_perfil_pkey");

                    b.ToTable("tipo_perfil", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Tramite", b =>
                {
                    b.Property<long>("IdTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdTramite"));

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<string>("NomTramite")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_tramite");

                    b.HasKey("IdTramite")
                        .HasName("tramites_pkey");

                    b.HasIndex("IdAgencia");

                    b.ToTable("tramites", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.TraVen", b =>
                {
                    b.Property<long>("IdTranVen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_tran_ven");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdTranVen"));

                    b.Property<long?>("IdTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    b.Property<long?>("IdVentanilla")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ventanilla");

                    b.HasKey("IdTranVen")
                        .HasName("tra_ven_pkey");

                    b.HasIndex("IdTramite");

                    b.HasIndex("IdVentanilla");

                    b.ToTable("tra_ven", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.UserTicket", b =>
                {
                    b.Property<long>("IdUserTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_user_ticket");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdUserTicket"));

                    b.Property<long?>("IdTicket")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ticket");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdUserTicket")
                        .HasName("user_ticket_pkey");

                    b.HasIndex("IdTicket");

                    b.HasIndex(new[] { "IdUsuario" }, "fki_id_usuarios");

                    b.ToTable("user_ticket", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdUsuario"));

                    b.Property<string>("ApeMaterno")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ape_materno");

                    b.Property<string>("ApePaterno")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ape_paterno");

                    b.Property<int?>("CiUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("ci_usuario");

                    b.Property<int?>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("FotoPerfil")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("foto_perfil");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<long?>("IdPerfil")
                        .HasColumnType("bigint")
                        .HasColumnName("id_perfil");

                    b.Property<string>("NomUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_usuario");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(64)
                        .HasColumnType("character(64)")
                        .HasColumnName("user_password")
                        .IsFixedLength();

                    b.HasKey("IdUsuario")
                        .HasName("usuario_pkey");

                    b.HasIndex("IdAgencia");

                    b.HasIndex(new[] { "IdPerfil" }, "fki_id_perfil");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.UtTramite", b =>
                {
                    b.Property<long>("IdUtTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_ut_tramite");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdUtTramite"));

                    b.Property<long?>("IdTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("id_tramite");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdUtTramite")
                        .HasName("ut_tramite_pkey");

                    b.HasIndex("IdTramite");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ut_tramite", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Ventanilla", b =>
                {
                    b.Property<long>("IdVentanilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_ventanilla");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdVentanilla"));

                    b.Property<int?>("EstadoV")
                        .HasColumnType("integer")
                        .HasColumnName("estado_v");

                    b.Property<long?>("IdAgencia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_agencia");

                    b.Property<string>("NomVentanilla")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom_ventanilla");

                    b.HasKey("IdVentanilla")
                        .HasName("ventanilla_pkey");

                    b.HasIndex("IdAgencia");

                    b.ToTable("ventanilla", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.VenUsuario", b =>
                {
                    b.Property<long>("IdVenUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_ven_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("IdVenUsuario"));

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.Property<long?>("IdVentanilla")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ventanilla");

                    b.HasKey("IdVenUsuario")
                        .HasName("ven_usuario_pkey");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVentanilla");

                    b.ToTable("ven_usuario", (string)null);
                });

            modelBuilder.Entity("apiServices.Models.Contacto", b =>
                {
                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Contactos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("apiServices.Models.DetalleObservacion", b =>
                {
                    b.HasOne("apiServices.Models.Observacione", "IdObservacionesNavigation")
                        .WithMany("DetalleObservacions")
                        .HasForeignKey("IdObservaciones")
                        .HasConstraintName("id_observaciones");

                    b.HasOne("apiServices.Models.Tramite", "IdTramiteNavigation")
                        .WithMany("DetalleObservacions")
                        .HasForeignKey("IdTramite")
                        .HasConstraintName("id_tramite");

                    b.Navigation("IdObservacionesNavigation");

                    b.Navigation("IdTramiteNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Historial", b =>
                {
                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("apiServices.Models.HistorialDerivacion", b =>
                {
                    b.HasOne("apiServices.Models.Ticket", "IdTicketNavigation")
                        .WithMany("HistorialDerivacions")
                        .HasForeignKey("IdTicket")
                        .HasConstraintName("id_ticket");

                    b.Navigation("IdTicketNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Multimedium", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("MultimediaNavigation")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.Navigation("IdAgenciaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.PantallaMul", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("PantallaMuls")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.HasOne("apiServices.Models.Multimedium", "IdMultiNavigation")
                        .WithMany("PantallaMuls")
                        .HasForeignKey("IdMulti")
                        .HasConstraintName("id_multi");

                    b.HasOne("apiServices.Models.TipoPantalla", "IdTipoNavigation")
                        .WithMany("PantallaMuls")
                        .HasForeignKey("IdTipo")
                        .HasConstraintName("id_tipo");

                    b.Navigation("IdAgenciaNavigation");

                    b.Navigation("IdMultiNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("apiServices.Models.RequisitoTramite", b =>
                {
                    b.HasOne("apiServices.Models.Requisito", "IdRequisitosNavigation")
                        .WithMany("RequisitoTramites")
                        .HasForeignKey("IdRequisitos")
                        .HasConstraintName("id_requisitos");

                    b.HasOne("apiServices.Models.Tramite", "IdTramiteNavigation")
                        .WithMany("RequisitoTramites")
                        .HasForeignKey("IdTramite")
                        .HasConstraintName("id_tramite");

                    b.Navigation("IdRequisitosNavigation");

                    b.Navigation("IdTramiteNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Ticket", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.HasOne("apiServices.Models.Prioridad", "IdPrioridadNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("IdPrioridad")
                        .HasConstraintName("id_prioridad");

                    b.HasOne("apiServices.Models.Tramite", "IdTramiteNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("IdTramite")
                        .HasConstraintName("id_tramite");

                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuario");

                    b.HasOne("apiServices.Models.Ventanilla", "IdVentanillaNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("IdVentanilla")
                        .HasConstraintName("id_ventanilla");

                    b.Navigation("IdAgenciaNavigation");

                    b.Navigation("IdPrioridadNavigation");

                    b.Navigation("IdTramiteNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("IdVentanillaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Tramite", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("Tramites")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.Navigation("IdAgenciaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.TraVen", b =>
                {
                    b.HasOne("apiServices.Models.Tramite", "IdTramiteNavigation")
                        .WithMany("TraVens")
                        .HasForeignKey("IdTramite")
                        .HasConstraintName("id_tramite");

                    b.HasOne("apiServices.Models.Ventanilla", "IdVentanillaNavigation")
                        .WithMany("TraVens")
                        .HasForeignKey("IdVentanilla")
                        .HasConstraintName("id_ventanilla");

                    b.Navigation("IdTramiteNavigation");

                    b.Navigation("IdVentanillaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.UserTicket", b =>
                {
                    b.HasOne("apiServices.Models.Ticket", "IdTicketNavigation")
                        .WithMany("UserTickets")
                        .HasForeignKey("IdTicket")
                        .HasConstraintName("id_ticket");

                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("UserTickets")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuarios");

                    b.Navigation("IdTicketNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Usuario", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.HasOne("apiServices.Models.TipoPerfil", "IdPerfilNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("id_perfil");

                    b.Navigation("IdAgenciaNavigation");

                    b.Navigation("IdPerfilNavigation");
                });

            modelBuilder.Entity("apiServices.Models.UtTramite", b =>
                {
                    b.HasOne("apiServices.Models.Tramite", "IdTramiteNavigation")
                        .WithMany("UtTramites")
                        .HasForeignKey("IdTramite")
                        .HasConstraintName("id_tramite");

                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("UtTramites")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuario");

                    b.Navigation("IdTramiteNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Ventanilla", b =>
                {
                    b.HasOne("apiServices.Models.Agencium", "IdAgenciaNavigation")
                        .WithMany("Ventanillas")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("id_agencia");

                    b.Navigation("IdAgenciaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.VenUsuario", b =>
                {
                    b.HasOne("apiServices.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("VenUsuarios")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("id_usuario");

                    b.HasOne("apiServices.Models.Ventanilla", "IdVentanillaNavigation")
                        .WithMany("VenUsuarios")
                        .HasForeignKey("IdVentanilla")
                        .HasConstraintName("id_ventanilla");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("IdVentanillaNavigation");
                });

            modelBuilder.Entity("apiServices.Models.Agencium", b =>
                {
                    b.Navigation("MultimediaNavigation");

                    b.Navigation("PantallaMuls");

                    b.Navigation("Tickets");

                    b.Navigation("Tramites");

                    b.Navigation("Usuarios");

                    b.Navigation("Ventanillas");
                });

            modelBuilder.Entity("apiServices.Models.Multimedium", b =>
                {
                    b.Navigation("PantallaMuls");
                });

            modelBuilder.Entity("apiServices.Models.Observacione", b =>
                {
                    b.Navigation("DetalleObservacions");
                });

            modelBuilder.Entity("apiServices.Models.Prioridad", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("apiServices.Models.Requisito", b =>
                {
                    b.Navigation("RequisitoTramites");
                });

            modelBuilder.Entity("apiServices.Models.Ticket", b =>
                {
                    b.Navigation("HistorialDerivacions");

                    b.Navigation("UserTickets");
                });

            modelBuilder.Entity("apiServices.Models.TipoPantalla", b =>
                {
                    b.Navigation("PantallaMuls");
                });

            modelBuilder.Entity("apiServices.Models.TipoPerfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("apiServices.Models.Tramite", b =>
                {
                    b.Navigation("DetalleObservacions");

                    b.Navigation("RequisitoTramites");

                    b.Navigation("Tickets");

                    b.Navigation("TraVens");

                    b.Navigation("UtTramites");
                });

            modelBuilder.Entity("apiServices.Models.Usuario", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Historials");

                    b.Navigation("Tickets");

                    b.Navigation("UserTickets");

                    b.Navigation("UtTramites");

                    b.Navigation("VenUsuarios");
                });

            modelBuilder.Entity("apiServices.Models.Ventanilla", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("TraVens");

                    b.Navigation("VenUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
